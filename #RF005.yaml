#RF005
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rf005
  labels:
    app: rf005
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rf005
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rf005
    spec:
      containers:
        - name: rf005
          image: us-central1-docker.pkg.dev/deliveryandlogistic/deliveryandlogistic-images/rf005:v1.0.0
          ports:
            - containerPort: 3007
          env:
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: DB_PASSWORD
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: DB_HOST
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: DB_PORT
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: DB_NAME
            - name: "USERS_PATH"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: USERS_PATH        
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always
      volumes:
        - name: appsecrets-volume
          secret:
            secretName: appsecrets
---            
#--- HEALTHCHECK RF005
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: rf005-config
spec:
  healthCheck:
    checkIntervalSec: 60
    port: 3007
    type: HTTP
    requestPath: /rf005/ping
---
#--- SERVICE RF005
kind: Service
apiVersion: v1
metadata:
  name: servicio-rf005
  annotations:
    cloud.google.com/backend-config: '{"default": "rf005-config"}'  
spec:
  type: NodePort
  selector:
    app: rf005
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3007
      nodePort: 31026
#--- RF005
---