###################################
# USERS
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  labels:
    app: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: users
    spec:
      serviceAccountName: k8s-pubsubaccess
      containers:
        - name: users
          image: us-central1-docker.pkg.dev/deliveryandlogistic/deliveryandlogistic-images/users:v1.0.0
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PASSWORD
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_HOST
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PORT
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_NAME
            - name: "USERS_PATH"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: USERS_PATH
            - name: "SECRET_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: SECRET_TOKEN
            - name: "CLOUD_PROJECT_ID"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: CLOUD_PROJECT_ID
            - name: "TOPIC_NEW_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: TOPIC_NEW_USER
            - name: "TOPIC_SEND_EMAIL"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: TOPIC_SEND_EMAIL
            - name: "TRUE_NATIVE_PATH"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: TRUE_NATIVE_PATH
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always
      volumes:
        - name: appsecrets-volume
          secret:
            secretName: appsecrets
---
# HEALTHCHECK users
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: users-config
spec:
  healthCheck:
    checkIntervalSec: 60
    port: 3000
    type: HTTP
    requestPath: /users/ping
---
#--- SERVICE users
kind: Service
apiVersion: v1
metadata:
  name: servicio-users
  annotations:
    cloud.google.com/backend-config: '{"default": "users-config"}'
spec:
  type: NodePort
  selector:
    app: users
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      nodePort: 31019
#--- USERS
---
###################################
#CREDIT-CARDS
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: credit-cards
  labels:
    app: credit-cards
spec:
  replicas: 1
  selector:
    matchLabels:
      app: credit-cards
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: credit-cards
    spec:
      serviceAccountName: k8s-pubsubaccess
      containers:
        - name: credit-cards
          image: us-central1-docker.pkg.dev/deliveryandlogistic/deliveryandlogistic-images/credit-cards:v1.0.0
          ports:
            - containerPort: 3020
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PASSWORD
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_HOST
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PORT
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_NAME
            - name: "USERS_PATH"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: USERS_PATH
            - name: "TRUE_NATIVE_PATH"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: TRUE_NATIVE_PATH
            - name: "CLOUD_PROJECT_ID"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: CLOUD_PROJECT_ID
            - name: "VALIDATE_CREDIT_CARD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: VALIDATE_CREDIT_CARD
            - name: "SECRET_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: SECRET_TOKEN
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always
      volumes:
        - name: appsecrets-volume
          secret:
            secretName: appsecrets
---
#--- HEALTHCHECK CREDIT-CARDS
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: credit-cards-config
spec:
  healthCheck:
    checkIntervalSec: 60
    port: 3020
    type: HTTP
    requestPath: /credit-cards/ping
---
#--- SERVICE CREDIT-CARDS
kind: Service
apiVersion: v1
metadata:
  name: servicio-credit-cards
  annotations:
    cloud.google.com/backend-config: '{"default": "credit-cards-config"}'
spec:
  type: NodePort
  selector:
    app: credit-cards
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3020
      nodePort: 31028
#--- CREDIT-CARDS
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: pubsubaccess@deliveryandlogistic.iam.gserviceaccount.com
  name: k8s-pubsubaccess
  namespace: default
---